// Generated by Dagger (https://dagger.dev).
package ru.surf._module_name_.ui.viewModels;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import ru.surf._module_name_.data.preferences._Module_name_Preferences;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class _Module_name_ViewModel_Factory implements Factory<_Module_name_ViewModel> {
  private final Provider<_Module_name_Preferences> preferencesProvider;

  public _Module_name_ViewModel_Factory(Provider<_Module_name_Preferences> preferencesProvider) {
    this.preferencesProvider = preferencesProvider;
  }

  @Override
  public _Module_name_ViewModel get() {
    return newInstance(preferencesProvider.get());
  }

  public static _Module_name_ViewModel_Factory create(
      Provider<_Module_name_Preferences> preferencesProvider) {
    return new _Module_name_ViewModel_Factory(preferencesProvider);
  }

  public static _Module_name_ViewModel newInstance(_Module_name_Preferences preferences) {
    return new _Module_name_ViewModel(preferences);
  }
}
